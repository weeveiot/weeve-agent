{
  "id": "6064fa29-e111-4a9a-af03-313988346f6d",
  "created": 1652939825784,
  "description": "MQTTEgress-Test",
  "document": "",
  "modified": 1652939825784,
  "name": "MQTTEgress-Test",
  "networks": {
   "driver": "bridge"
  },
  "services": [
   {
    "id": "2b6e064f-9571-4484-ba72-4962af51794b",
    "categories": [
     {
      "id": "category",
      "name": "Ingress"
     }
    ],
    "commands": [],
    "description": "Data ingress for MQTT",
    "document": "{\"ports\":[],\"volumes\":[],\"restart_policy\":{\"condition\":\"on-failure\",\"delay\":\"10s\",\"max_attempts\":3,\"window\":\"120s\"}}",
    "environments": [
     {
      "default": "",
      "description": "Broker to subscribe from",
      "key": "MQTT_BROKER",
      "name": "MQTT Broker",
      "options": null,
      "type": "string",
      "value": "mqtt://44.197.202.139"
     },
     {
      "default": "1883",
      "description": "Port on which the broker is listening",
      "key": "PORT",
      "name": "Port",
      "options": null,
      "type": "integer",
      "value": "1883"
     },
     {
      "default": "mqtt",
      "description": "Protocol used for connection",
      "key": "PROTOCOL",
      "name": "Protocol",
      "options": [
       "mqtt",
       "ws"
      ],
      "type": "enum",
      "value": "mqtt"
     },
     {
      "default": "",
      "description": "Topic to subscribe",
      "key": "TOPIC",
      "name": "Topic",
      "options": null,
      "type": "string",
      "value": "weeve/ncs/coffee"
     },
     {
      "default": "",
      "description": "Quality of service for the connection",
      "key": "QOS",
      "name": "QOS",
      "options": [
       "0",
       "1",
       "2"
      ],
      "type": "enum",
      "value": "1"
     }
    ],
    "icon": "https://icons-020-demo.s3.eu-central-1.amazonaws.com/mi_mqtt_input.png",
    "image": {
     "name": "weevenetwork/mqtt-ingress",
     "tag": "latest"
    },
    "name": "MQTT Ingress",
    "tags": [
     "MQTT Ingress",
     "input",
     "Data",
     "ingress",
     "MQTT"
    ],
    "type": "input",
    "version": "1.0.0"
   },
   {
    "id": "11b28b9a-4062-4634-95d7-94a7d0a52b33",
    "categories": [
     {
      "id": "category",
      "name": "Filter"
     }
    ],
    "commands": [],
    "description": "Filtering data according to query",
    "document": "{\"ports\":[],\"volumes\":[],\"restart_policy\":{\"condition\":\"on-failure\",\"delay\":\"10s\",\"max_attempts\":3,\"window\":\"120s\"}}",
    "environments": [
     {
      "default": "",
      "description": "The field to apply filter on",
      "key": "INPUT_LABEL",
      "name": "Input Label",
      "options": null,
      "type": "string",
      "value": "reject_rate"
     },
     {
      "default": "",
      "description": "Output label for data",
      "key": "OUTPUT_LABEL",
      "name": "Output Label",
      "options": null,
      "type": "string",
      "value": "Reject_Rate"
     },
     {
      "default": "",
      "description": "Output unit for data",
      "key": "OUTPUT_UNIT",
      "name": "Output Unit",
      "options": null,
      "type": "string",
      "value": "%"
     },
     {
      "default": "",
      "description": "Query/Condition for filtering the data",
      "key": "CONDITION",
      "name": "Condition",
      "options": [
       "No condition",
       "(==) equal to",
       "(!=) not equal to",
       "(>) greater than",
       "(>=) greater than or equal to",
       "(<) less than",
       "(<=) less than or equal to"
      ],
      "type": "enum",
      "value": "(>) greater than"
     },
     {
      "default": "",
      "description": "The value to compare with",
      "key": "COMPARE_VALUE",
      "name": "Compare value",
      "options": null,
      "type": "integer",
      "value": "15"
     }
    ],
    "icon": "https://icons-020-demo.s3.eu-central-1.amazonaws.com/mi_comparison-filter_process.png",
    "image": {
     "name": "weevenetwork/comparison-filter",
     "tag": "latest"
    },
    "name": "Comparison Filter",
    "tags": [
     "Filter",
     "process",
     "Filtering",
     "data",
     "according",
     "query"
    ],
    "type": "process",
    "version": "1.0.0"
   },
   {
    "id": "4decbe05-0501-4c74-9db6-7bc560cf1576",
    "categories": [
     {
      "id": "category",
      "name": "Egress"
     }
    ],
    "commands": [],
    "description": "Send data to a remote MQTT broker.",
    "document": "{\"ports\":[],\"volumes\":[],\"restart_policy\":{\"condition\":\"on-failure\",\"delay\":\"10s\",\"max_attempts\":3,\"window\":\"120s\"}}",
    "environments": [
     {
      "default": "mqtt://test.mosquitto.org",
      "description": "Broker to publish to.",
      "key": "MQTT_BROKER",
      "name": "MQTT Broker",
      "options": null,
      "type": "string",
      "value": "mqtt://test.mosquitto.org"
     },
     {
      "default": "1883",
      "description": "Port on which the broker is listening.",
      "key": "PORT",
      "name": "Port",
      "options": null,
      "type": "integer",
      "value": "1883"
     },
     {
      "default": "weeve/factory",
      "description": "Topic to publish.",
      "key": "TOPIC",
      "name": "Topic",
      "options": null,
      "type": "string",
      "value": "weeve/factory"
     },
     {
      "default": "",
      "description": "Quality of service for the connection.",
      "key": "QOS",
      "name": "QOS",
      "options": [
       "0",
       "1",
       "2"
      ],
      "type": "enum",
      "value": "1"
     },
     {
      "default": "temperature, pressure",
      "description": "List of comma (,) separated labels to read from a previous module. Leave empty (\"\") to keep all data.",
      "key": "LABELS",
      "name": "Input Labels",
      "options": null,
      "type": "string",
      "value": "temperature, pressure"
     }
    ],
    "icon": "https://icons-020-demo.s3.eu-central-1.amazonaws.com/mi_mqtt_output.png",
    "image": {
     "name": "weevenetwork/mqtt-egress",
     "tag": "latest"
    },
    "name": "MQTT Egress",
    "tags": [
     "MQTT Egress",
     "output",
     "Data",
     "egress",
     "MQTT"
    ],
    "type": "output",
    "version": "1.0.0"
   }
  ],
  "version": "1.0.0"
 }